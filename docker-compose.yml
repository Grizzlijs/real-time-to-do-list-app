version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: todo-app-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: todo_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend Server
  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: todo-app-server
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 5000
      CLIENT_URL: http://localhost:80
      PG_USER: postgres
      PG_PASSWORD: postgres
      PG_HOST: postgres
      PG_PORT: 5432
      PG_DATABASE: todo_app
    ports:
      - "5000:5000"

  # Frontend Client
  client:
    build:
      context: .
      dockerfile: client/Dockerfile
      args:
        REACT_APP_SOCKET_URL: http://localhost:5000
    container_name: todo-app-client
    restart: unless-stopped
    depends_on:
      - server
    ports:
      - "80:80"

volumes:
  postgres-data:
